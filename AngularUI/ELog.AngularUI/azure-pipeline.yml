# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

#trigger:
#- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  dockerRepoUrl: 'splatformdockeracr.azurecr.io'
  dockerRepoName: 'splatformrepo'
  dockerAuthSecretName: 'splatformk8sdockerauth'
  namespace: 'default'
  azureSubscriptionEndpoint: 'SPlatform-Azure-Connection'
  kubernetesServiceConnection: 'Splatform-Kubernetes-Connection'

stages:
- stage: Build
  displayName: Build and Push image
  jobs:  
  - job: BuildandPush
    displayName: Build and Push
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@1
      displayName: 'Build an image'
      inputs:
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: $(dockerRepoUrl)
        dockerFile: AngularUI/SPlatformAngular.AngularUI/Dockerfile
        imageName: '$(dockerRepoUrl)/$(dockerRepoName):angular-$(Build.BuildId)'
        useDefaultContext: false
        buildContext: '$(Build.Repository.LocalPath)'
    - task: Docker@1
      displayName: 'Push an image'
      inputs:
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry:  $(dockerRepoUrl)
        command: 'Push an image'
        imageName: '$(dockerRepoUrl)/$(dockerRepoName):angular-$(Build.BuildId)'
    - task: CopyFiles@2
      inputs:
        contents: 'AngularUI/SPlatformAngular.AngularUI/splatform-angular-deployment.yaml'
        targetFolder: '$(Build.ArtifactStagingDirectory)'   
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
- stage: Deploy
  displayName: Pull image and Deploy
  jobs:  
  - job: PullAndDeploy
    displayName: Pull and Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: Download Artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        downloadPath: '$(System.ArtifactsDirectory)'
        artifactName: 'Drop'
    - task: Kubernetes@1
      displayName: Pull Image from Registry
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: $(kubernetesServiceConnection)
        namespace: 'default'
        command: 'get'
        arguments: 'service'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
        azureSubscriptionEndpointForSecrets: $(azureSubscriptionEndpoint)
        azureContainerRegistry: '$(dockerRepoUrl)'
        secretName: '$(dockerAuthSecretName)'
        versionSpec: '1.16.13'
    - task: replacetokens@3
      displayName: Replace Token
      inputs:
        rootDirectory: '$(System.ArtifactsDirectory)/drop/AngularUI/SPlatformAngular.AngularUI'
        targetFiles: 'splatform-angular-deployment.yaml'
        encoding: 'auto'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        useLegacyPattern: false
        enableTelemetry: true
    - task: CmdLine@2
      displayName: Validate Replaced Token
      inputs:
        script: |
          echo 'Replaced YAML file content'
          cat splatform-angular-deployment.yaml
        workingDirectory: '$(System.ArtifactsDirectory)/drop/AngularUI/SPlatformAngular.AngularUI'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: $(kubernetesServiceConnection)
        namespace: 'default'
        manifests: '$(System.ArtifactsDirectory)/drop/AngularUI/SPlatformAngular.AngularUI/splatform-angular-deployment.yaml'
        imagePullSecrets: '$(dockerAuthSecretName)'
